@using Web.Controllers;
@model CatalogViewModel

@{
    ViewData["Title"] = "Catalog";
}

@section Styles {
    <script src='https://cdn.tailwindcss.com'></script>
    <link rel="stylesheet" href="~/css/pages/catalog.css">
}

<div class="title-block__wrapper">
    <div class="catalog-section__title-block">
        <p class="title-page">Products</p>
        <a href="#!" class="subtitle-page">List</a>
    </div>
</div>
<div class="catalog__wrapper">
    <div class="catalog-section container">
        <div class="catalog">
            <div class="catalog__filters">
                <div class="catalog__filters-header">
                    <p class="filters-header__title">Filters:</p>
                    <a class="filters-header__clear">Clear All</a>
                </div>
                <ul class="filters__list">
                    <li class="filters__item">
                        <p class="filters__item-title">Category</p>
                        <div class="filters__item-child">
                            <input type="text" placeholder="Search Category" class="outline-none mt-1 mb-2 search-category">
                            @if (Model.Categories != null && Model.Categories.Any())
                            {
                                foreach (var category in Model.GetCategories())
                                {
                                    <label for="@category" class="filters__item-label filters__item--category"><input type="checkbox" name="category" id="@category" class="mr-2" value="@category">@category</label>
                                }
                            }
                        </div>
                    </li>
                    <li class="filters__item">
                        <p class="filters__item-title">Price</p>
                        <div class="filters__item-child flex flex-row">
                            <input type="number" class="w-1/2 outline-none mr-2 filters__item--price" placeholder="From" id="priceFrom">
                            <input type="number" class="w-1/2 outline-none filters__item--price" placeholder="To" id="priceTo">
                        </div>
                    </li>
                    <li class="filters__item">
                        <p class="filters__item-title">Brand</p>
                        <div class="filters__item-child">
                            <input type="text" placeholder="Search Brands" class="outline-none mt-1 mb-2 search-brand">
                            @if (Model.Brands != null && Model.Brands.Any())
                            {
                                foreach (var brand in Model.GetBrands())
                                {
                                    <label for="@brand" class="filters__item-label filters__item--manufacture"><input type="checkbox" name="@brand" id="@brand" class="mr-2" value="@brand">@brand</label>
                                }
                            }
                        </div>
                    </li>
                    <button class="search">Search</button>
                </ul>
            </div>
            <div class="catalog__shop">
                <div class="catalog__shop-header">
                    <p class="shop-header__showing">Showing <span class="shop-header__number">@Model.Products.Count of @Model.TotalAmount</span> Product</p>
                    <div class="shop-header__sort-by">
                        <p class="sort-by__desk">Sort by:</p>
                        <select class="sort-by__select">
                            <option value="0" class="sort-by__option">Date</option>
                            <option value="2" class="sort-by__option">Price</option>
                        </select>
                    </div>
                </div>
                <ul class="catalog__list">
                    @if (Model.Products != null && Model.Products.Any())
                    {
                        @foreach (var product in Model.Products)
                        {
                            <li class="catalog__product">
                                <div class="product__img-wrapper">
                                    <a href="/Catalog/Product/@product.Id">
                                        <img src="@product.Picture" class="product__img">
                                    </a>
                                </div>
                                <p class="product__subtitle">@product.VendorCode</p>
                                <p class="product__title">@product.Name</p>
                                <p class="product__price"><span class="product__price-span">@product.Price.ToString("# rub")</span></p>
                                @{
                                    bool added = false;

                                    foreach (var line in CartController.GetCart(Context).Lines)
                                    {
                                        if (line.Product.Id == product.Id)
                                        {
                                            added = true;
                                        }
                                    }

                                    @if (added)
                                    {
                                        <a class="product__btn product__btn--active" id="@product.Id">TO CART</a>
                                    }
                                    else
                                    {
                                        <a class="product__btn" id="@product.Id">Add to cart</a>
                                    }
                                }
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="btns__next-page">
        <a class="next-page__btn next-page__btn--next" href="/Catalog/@Model.CalculatePrevious()"><</a>
        @{
            if (Model.CurrentPage != 1)
            {
                <a class="next-page__btn next-page__btn--next" href="/Catalog/1">1</a>
            }
            <a class="next-page__btn next-page__btn--next" style="background-color: #DDD" href="/Catalog/@Model.CurrentPage">@Model.CurrentPage</a>
            if (Model.CurrentPage != Model.NumberOfPages)
            {
                <a class="next-page__btn next-page__btn--next" href="/Catalog/@Model.NumberOfPages">@Model.NumberOfPages</a>
            }
        }
        <a class="next-page__btn next-page__btn--next" href="/Catalog/@Model.CalculateNext()">></a>
    </div>
</div>

@section Scripts {
    <script src="~/js/pages/catalog.js"></script>
}